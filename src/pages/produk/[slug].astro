---
// src/pages/produk/[...slug].astro (FINAL - Simpan ke DB & Buka GMail)
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Wapop from '../../components/wapop.astro';
import { supabase } from '../../lib/supabase';

export async function getStaticPaths() {
  const { data: allProducts } = await supabase.from('produk').select('slug');
  return allProducts?.map(p => ({ params: { slug: p.slug } })) || [];
}

const { slug } = Astro.params;

// DIUBAH: Kita ambil data produk DAN data kontak bisnismu sekaligus
const [ productResult, kontakResult ] = await Promise.all([
    supabase.from('produk').select('nama, gambar, kategori, deskripsi').eq('slug', slug).single(),
    supabase.from('kontak').select('email').eq('id', 1).single()
]);

const post = productResult.data;
const infoKontak = kontakResult.data;

if (!post) return Astro.redirect('/404');

// Siapkan email tujuan dinamis dari database
const recipientEmail = infoKontak?.email || 'email.fallback@dyeapparel.com';

// =========================================================================
// PERUBAHAN UTAMA DI SINI: Membuat autoDescription yang super lengkap
// =========================================================================
// Ambil URL halaman saat ini dari object Astro
const productUrl = Astro.url.href;

// Gabungkan semua informasi ke dalam satu template canggih
const autoDescription = `Halo Dye Apparel,

Saya tertarik untuk custom order produk yang saya lihat di halaman berikut:
${productUrl}

--- Detail Produk ---
Nama: "${post.nama}"
Kategori: "${post.kategori.join(', ')}"

--- Detail Kebutuhan Saya ---
- Perkiraan Jumlah: [Mohon diisi]
- Ukuran & Jumlahnya: [Mohon diisi]
- Warna: [Mohon diisi]

--- Kontak Saya ---
- Nomor WA/HP: [Mohon diisi agar mudah dihubungi]

Mohon informasinya mengenai harga dan waktu pengerjaan.

Terima kasih.`;
// =========================================================================
---
<Layout title={`${post.nama} â€“ Dye Apparel`} description={post.deskripsi}>
  <Header />
  <main class="container-custom py-16">
    <article class="max-w-3xl mx-auto space-y-8">
      <div class="mb-8">
        <a href="/kategori" class="inline-flex items-center text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
          &larr; Back to Kategori
        </a>
      </div>
      
      <div class="flex flex-wrap gap-4 items-center justify-between">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white">{post.nama}</h1>
        
        <button 
            id="open-modal-button"
            data-recipient-email={recipientEmail}
            class="px-5 py-2.5 bg-primary-600 text-white rounded-lg hover:bg-primary-700 focus:outline-none focus:ring-4 focus:ring-primary-300 dark:focus:ring-primary-800 font-semibold"
        >
          Custom Sekarang
        </button>
      </div>
        
      <img src={post.gambar} alt={post.nama} class="w-full h-auto rounded-xl object-cover shadow-lg" />
      
      <div class="prose prose-lg dark:prose-invert" set:html={post.deskripsi} />

      <div class="flex flex-wrap gap-2">
        {post.kategori.map(cat => (
          <span class="px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-white rounded-full text-sm">{cat}</span>
        ))}
      </div>
    </article>
  </main>
  <Footer />
</Layout>
<Wapop />

<div id="contact-modal" class="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-[99] hidden opacity-0 transition-opacity duration-300">
  <div id="modal-panel" class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md transform transition-all opacity-0 -translate-y-10 duration-300">
    <div class="p-5 border-b dark:border-gray-700 flex justify-between items-center">
      <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Form Minat Custom</h3>
      <button id="close-modal-button" class="text-gray-400 hover:text-gray-600 dark:hover:text-white">&times;</button>
    </div>
    <form id="custom-message-form" class="p-5 space-y-4">
      <div>
        <label for="modal-nama" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Nama Anda</label>
        <input type="text" id="modal-nama" name="nama" required class="block w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm" />
      </div>
      <div>
        <label for="modal-email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email Anda</label>
        <input type="email" id="modal-email" name="email" required class="block w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm" />
      </div>
      <div>
        <label for="modal-deskripsi" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Pesan (Otomatis)</label>
        <textarea id="modal-deskripsi" name="deskripsi" rows="4" readonly class="block w-full px-3 py-2 bg-gray-100 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 sm:text-sm">{autoDescription}</textarea>
      </div>
      <div class="pt-2">
        <button type="submit" id="submit-modal-button" class="w-full bg-primary-600 text-white font-semibold py-2.5 px-5 rounded-lg hover:bg-primary-700 inline-flex items-center justify-center">
            <span class="btn-text">Kirim & Buka Email</span>
            <span class="loading-spinner hidden ml-2 w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></span>
        </button>
        <div id="modal-feedback" class="mt-3 text-center text-sm"></div>
      </div>
    </form>
  </div>
</div>

<script is:inline>
  function setupProductPage() {
    const openModalBtn = document.getElementById('open-modal-button');
    const modal = document.getElementById('contact-modal');
    const modalPanel = document.getElementById('modal-panel');
    const closeModalBtn = document.getElementById('close-modal-button');
    const contactForm = document.getElementById('custom-message-form');

    if (!openModalBtn || !modal || !closeModalBtn || !contactForm) return;

    if (openModalBtn.dataset.listenerAttached === 'true') return;

    const showModal = () => {
      modal.classList.remove('hidden');
      setTimeout(() => {
        modal.classList.remove('opacity-0');
        modalPanel.classList.remove('opacity-0', '-translate-y-10');
      }, 10);
    };

    const hideModal = () => {
      modalPanel.classList.add('opacity-0', '-translate-y-10');
      modal.classList.add('opacity-0');
      setTimeout(() => modal.classList.add('hidden'), 300);
    };

    openModalBtn.addEventListener('click', showModal);
    closeModalBtn.addEventListener('click', hideModal);
    modal.addEventListener('click', (event) => { if (event.target === modal) hideModal(); });
    openModalBtn.dataset.listenerAttached = 'true';

    contactForm.addEventListener('submit', async (event) => {
      event.preventDefault();
      
      const submitButton = document.getElementById('submit-modal-button');
      const feedbackDiv = document.getElementById('modal-feedback');
      const btnText = submitButton.querySelector('.btn-text');
      const spinner = submitButton.querySelector('.loading-spinner');
      
      btnText.textContent = 'Menyimpan...';
      spinner.classList.remove('hidden');
      submitButton.disabled = true;
      feedbackDiv.textContent = '';

      const dataToSend = {
        nama: document.getElementById('modal-nama').value,
        email: document.getElementById('modal-email').value,
        deskripsi: document.getElementById('modal-deskripsi').value,
      };

      try {
        // LANGKAH A: Simpan ke Supabase
        const response = await fetch('/api/save-message', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(dataToSend),
        });
        const result = await response.json();
        if (!response.ok) throw new Error(result.message || 'Gagal mengirim.');

        // Jika berhasil, lanjutkan ke Langkah B
        feedbackDiv.className = 'mt-3 text-center text-sm text-green-600';
        feedbackDiv.textContent = 'Sukses! Membuka aplikasi email...';
        
        // LANGKAH B: Buka GMail
        const recipientEmail = openModalBtn.dataset.recipientEmail;
        const subject = `Minat Custom (via Website) - ${dataToSend.nama}`;
        const body = dataToSend.deskripsi;
        const mailtoLink = `mailto:${recipientEmail}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
        
        // Beri jeda agar user bisa baca notif, lalu redirect dan tutup modal
        setTimeout(() => {
            window.location.href = mailtoLink;
            hideModal();
            contactForm.reset();
            feedbackDiv.textContent = '';
        }, 1500);

      } catch (err) {
        feedbackDiv.className = 'mt-3 text-center text-sm text-red-600';
        feedbackDiv.textContent = `Error: ${err.message}`;
      } finally {
        // Kembalikan tombol ke keadaan semula setelah jeda
        setTimeout(() => {
            btnText.textContent = 'Kirim & Buka Email';
            spinner.classList.add('hidden');
            submitButton.disabled = false;
        }, 2000);
      }
    });
  }

  document.addEventListener('astro:page-load', setupProductPage);
  if (document.readyState !== 'loading') {
    setupProductPage();
  } else {
    document.addEventListener('DOMContentLoaded', setupProductPage);
  }
</script>