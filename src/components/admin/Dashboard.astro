---
// src/components/admin/DashboardUtama.astro
import { supabase } from '../../lib/supabase'; // PENTING: Pastikan path ini benar!

// Data fetching awal yang efisien dengan Promise.all
const [
  messagesResult,
  totalPesanResult,
  pesanHariIniResult,
  totalBannerResult,
  totalKoleksiResult,
  totalBahanResult,
  totalProdukResult
] = await Promise.all([
  supabase.from('pesan_masuk').select('*').order('created_at', { ascending: false }).limit(10),
  supabase.from('pesan_masuk').select('id', { count: 'exact', head: true }),
  (() => {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);
    return supabase.from('pesan_masuk').select('id', { count: 'exact', head: true }).gte('created_at', today.toISOString()).lt('created_at', tomorrow.toISOString());
  })(),
  supabase.from('banner').select('id', { count: 'exact', head: true }),
  supabase.from('koleksi').select('id', { count: 'exact', head: true }),
  supabase.from('bahan').select('id', { count: 'exact', head: true }),
  supabase.from('produk').select('id', { count: 'exact', head: true })
]);

// Ekstrak data dan handle error jika ada
const messages = messagesResult.data ?? [];
const totalPesan = totalPesanResult.count ?? 0;
const pesanHariIni = pesanHariIniResult.count ?? 0;
const totalBanner = totalBannerResult.count ?? 0;
const totalKoleksi = totalKoleksiResult.count ?? 0;
const totalBahan = totalBahanResult.count ?? 0;
const totalProduk = totalProdukResult.count ?? 0;
---

<div class="space-y-8" id="dashboard-container">


    <section class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4 md:gap-6">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 border-l-4 border-blue-400 dark:border-blue-700 transition-all hover:shadow-md">
        <div class="h-10 w-10 rounded-full flex items-center justify-center bg-blue-100 dark:bg-blue-900"><svg class="w-6 h-6 text-blue-600 dark:text-blue-300" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg></div>
        <h3 class="mt-2 text-sm font-medium text-gray-500 dark:text-gray-400">Total Pesan</h3>
        <p class="mt-1 text-2xl font-bold text-gray-800 dark:text-gray-100">{totalPesan}</p>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 border-l-4 border-green-400 dark:border-green-700 transition-all hover:shadow-md">
        <div class="h-10 w-10 rounded-full flex items-center justify-center bg-green-100 dark:bg-green-900"><svg class="w-6 h-6 text-green-600 dark:text-green-300" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path></svg></div>
        <h3 class="mt-2 text-sm font-medium text-gray-500 dark:text-gray-400">Pesan Hari Ini</h3>
        <p class="mt-1 text-2xl font-bold text-gray-800 dark:text-gray-100">{pesanHariIni}</p>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 border-l-4 border-indigo-400 dark:border-indigo-700 transition-all hover:shadow-md">
        <div class="h-10 w-10 rounded-full flex items-center justify-center bg-indigo-100 dark:bg-indigo-900"><svg class="w-6 h-6 text-indigo-600 dark:text-indigo-300" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l-1-1m5.5-5.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM3 3h18a2 2 0 012 2v14a2 2 0 01-2 2H3a2 2 0 01-2-2V5a2 2 0 012-2z"></path></svg></div>
        <h3 class="mt-2 text-sm font-medium text-gray-500 dark:text-gray-400">Total Banner</h3>
        <p class="mt-1 text-2xl font-bold text-gray-800 dark:text-gray-100">{totalBanner}</p>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 border-l-4 border-purple-400 dark:border-purple-700 transition-all hover:shadow-md">
        <div class="h-10 w-10 rounded-full flex items-center justify-center bg-purple-100 dark:bg-purple-900"><svg class="w-6 h-6 text-purple-600 dark:text-purple-300" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4"></path></svg></div>
        <h3 class="mt-2 text-sm font-medium text-gray-500 dark:text-gray-400">Total Koleksi</h3>
        <p class="mt-1 text-2xl font-bold text-gray-800 dark:text-gray-100">{totalKoleksi}</p>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 border-l-4 border-pink-400 dark:border-pink-700 transition-all hover:shadow-md">
        <div class="h-10 w-10 rounded-full flex items-center justify-center bg-pink-100 dark:bg-pink-900"><svg class="w-6 h-6 text-pink-600 dark:text-pink-300" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 4h5m-5 4h5m-5-4a1 1 0 01-2 0V7a1 1 0 012 0v4zm7 0a1 1 0 01-2 0V7a1 1 0 012 0v4z"></path></svg></div>
        <h3 class="mt-2 text-sm font-medium text-gray-500 dark:text-gray-400">Total Bahan</h3>
        <p class="mt-1 text-2xl font-bold text-gray-800 dark:text-gray-100">{totalBahan}</p>
      </div>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 border-l-4 border-yellow-400 dark:border-yellow-700 transition-all hover:shadow-md">
        <div class="h-10 w-10 rounded-full flex items-center justify-center bg-yellow-100 dark:bg-yellow-900"><svg class="w-6 h-6 text-yellow-600 dark:text-yellow-300" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path></svg></div>
        <h3 class="mt-2 text-sm font-medium text-gray-500 dark:text-gray-400">Total Produk</h3>
        <p class="mt-1 text-2xl font-bold text-gray-800 dark:text-gray-100">{totalProduk}</p>
      </div>
    </section>

    <section class="bg-white dark:bg-gray-800 rounded-lg shadow-md">
        <div class="p-4 sm:p-6 border-b dark:border-gray-700 flex flex-wrap gap-4 justify-between items-center">
            <h2 class="text-xl font-semibold text-gray-800 dark:text-white">Pesan Masuk Terbaru</h2>
            <button id="load-more-button" class="bg-gray-200 text-gray-700 font-semibold py-2 px-4 rounded-lg hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 transition-colors text-sm inline-flex items-center">
                <span class="btn-text">Muat Lebih Banyak</span>
                <span class="loading-spinner hidden ml-2 w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin"></span>
            </button>
        </div>
      <div class="overflow-x-auto">
        <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
          <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
              <th scope="col" class="px-6 py-3">Pengirim</th>
              <th scope="col" class="px-6 py-3">Pesan</th>
              <th scope="col" class="px-6 py-3">Tanggal</th>
              <th scope="col" class="px-6 py-3 text-right">Aksi</th>
            </tr>
          </thead>
          <tbody id="messages-table-body">
            {messages.map(msg => (
              <tr id={`message-row-${msg.id}`} class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 cursor-pointer detail-trigger" data-message-id={msg.id}>
                <td class="px-6 py-4">
                  <div class="font-medium text-gray-900 dark:text-white">{msg.nama}</div>
                  <div class="text-xs text-gray-500">{msg.email}</div>
                </td>
                <td class="px-6 py-4 max-w-xs truncate" title={msg.deskripsi}>{msg.deskripsi}</td>
                <td class="px-6 py-4 sm:whitespace-nowrap">{new Date(msg.created_at).toLocaleString('id-ID', { day: 'numeric', month: 'short', year: 'numeric' })}</td>
                <td class="px-6 py-4 text-right space-x-3 whitespace-nowrap">
                  <button title="Balas via Email" class="reply-button p-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors rounded-full hover:bg-gray-100 dark:hover:bg-gray-700" data-nama={msg.nama} data-email={msg.email} data-deskripsi={msg.deskripsi}>
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"></path></svg>
                  </button>
                  <button title="Hapus Pesan" class="delete-button p-1 text-gray-500 hover:text-red-600 dark:text-gray-400 dark:hover:text-red-400 transition-colors rounded-full hover:bg-gray-100 dark:hover:bg-gray-700" data-message-id={msg.id}>
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
        {messages.length === 0 && <p class="text-center py-8 text-gray-500 dark:text-gray-400">Tidak ada pesan masuk.</p>}
      </div>
    </section>
</div>

<div id="detail-modal" class="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-[99] hidden opacity-0 transition-opacity duration-300">
    <div id="modal-content" class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-lg transform transition-all opacity-0 -translate-y-10 duration-300">
        <div class="p-6 border-b dark:border-gray-700 flex justify-between items-center">
            <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Detail Pesan</h3>
            <button id="modal-close-button" class="text-gray-400 hover:text-gray-600 dark:hover:text-white text-3xl font-light">&times;</button>
        </div>
        <div class="p-6 space-y-4 max-h-[70vh] overflow-y-auto">
            <div><p class="text-sm text-gray-500">Tanggal</p><p id="modal-tanggal" class="text-gray-800 dark:text-gray-200"></p></div>
            <div><p class="text-sm text-gray-500">Dari</p><p id="modal-nama" class="font-semibold text-gray-900 dark:text-white"></p><p id="modal-email" class="text-sm text-blue-600"></p></div>
            <div><p class="text-sm text-gray-500">Isi Pesan</p><p id="modal-deskripsi" class="text-gray-800 dark:text-gray-200 whitespace-pre-wrap bg-gray-50 dark:bg-gray-700/50 p-3 rounded-md"></p></div>
        </div>
    </div>
</div>

<div id="toast-notification" class="fixed top-5 right-5 z-[100] text-white py-2 px-4 rounded-lg shadow-lg text-sm transition-all duration-300 transform translate-x-[120%] opacity-0">
    <p id="toast-message"></p>
</div>


<script is:inline>
  (function() {
    let currentPage = 1;
    let isFetching = false;
    let toastTimeout;

    const showToast = (message, isError = false) => {
        const toast = document.getElementById('toast-notification');
        const toastMessage = document.getElementById('toast-message');
        if (!toast || !toastMessage) return;
        clearTimeout(toastTimeout);
        toastMessage.textContent = message;
        toast.classList.remove('bg-green-600', 'bg-red-600');
        toast.classList.add(isError ? 'bg-red-600' : 'bg-green-600');
        toast.classList.remove('opacity-0', 'translate-x-[120%]');
        toast.classList.add('opacity-100', 'translate-x-0');
        toastTimeout = setTimeout(() => {
            toast.classList.remove('opacity-100', 'translate-x-0');
            toast.classList.add('opacity-0', 'translate-x-[120%]');
        }, 3000);
    };

    const renderRows = (messages) => {
        return messages.map(msg => `
            <tr id="message-row-${msg.id}" class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 cursor-pointer detail-trigger" data-message-id="${msg.id}">
                <td class="px-6 py-4"><div class="font-medium text-gray-900 dark:text-white">${msg.nama}</div><div class="text-xs text-gray-500">${msg.email}</div></td>
                <td class="px-6 py-4 max-w-xs truncate" title="${msg.deskripsi}">${msg.deskripsi}</td>
                <td class="px-6 py-4 sm:whitespace-nowrap">${new Date(msg.created_at).toLocaleString('id-ID', { day: 'numeric', month: 'short', year: 'numeric' })}</td>
                <td class="px-6 py-4 text-right space-x-3 whitespace-nowrap">
                    <button title="Balas via Email" class="reply-button p-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors rounded-full hover:bg-gray-100 dark:hover:bg-gray-700" data-nama="${msg.nama}" data-email="${msg.email}" data-deskripsi="${msg.deskripsi}"><svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"></path></svg></button>
                    <button title="Hapus Pesan" class="delete-button p-1 text-gray-500 hover:text-red-600 dark:text-gray-400 dark:hover:text-red-400 transition-colors rounded-full hover:bg-gray-100 dark:hover:bg-gray-700" data-message-id="${msg.id}"><svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg></button>
                </td>
            </tr>
        `).join('');
    };
    
    const initDashboard = () => {
        const container = document.getElementById('dashboard-container');
        const loadMoreButton = document.getElementById('load-more-button');
        const modal = document.getElementById('detail-modal');
        const modalContent = document.getElementById('modal-content');
        const closeModalButton = document.getElementById('modal-close-button');

        if (!container) return;
        
        container.addEventListener('click', async (event) => {
            const target = event.target;
            const replyButton = target.closest('.reply-button');
            const deleteButton = target.closest('.delete-button');
            const detailTrigger = target.closest('.detail-trigger');

            if (replyButton) {
                event.stopPropagation();
                const { email, nama, deskripsi } = replyButton.dataset;
                const subject = `Re: Dye Apparel - ${nama}`;
                const body = `Halo ${nama},\n\nTerima kasih atas pesan Anda.\n\n> "${deskripsi}"\n\n---\n`;
                window.open(`mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`, '_blank');
            }

            if (deleteButton) {
                event.stopPropagation();
                const messageId = deleteButton.dataset.messageId;
                if (!messageId || deleteButton.disabled) return;
                
                const row = document.getElementById(`message-row-${messageId}`);
                const nama = row?.querySelector('td:first-child > div:first-child')?.textContent?.trim() || 'ini';

                if (!confirm(`Yakin ingin menghapus pesan dari "${nama}"?`)) return;

                deleteButton.innerHTML = `<span class="w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin"></span>`;
                deleteButton.disabled = true;

                try {
                    const response = await fetch('/api/delete-pesan', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ id: messageId }) });
                    if (!response.ok) throw new Error((await response.json()).message || 'Gagal menghapus.');
                    
                    showToast('Pesan berhasil dihapus.');
                    if (row) {
                        row.style.opacity = '0';
                        setTimeout(() => row.remove(), 300);
                    }
                } catch (err) {
                    showToast(err.message, true);
                    const originalIcon = `<svg class="w-5 h-5"...>`; // kembalikan ikon asli
                    deleteButton.innerHTML = originalIcon;
                    deleteButton.disabled = false;
                }
            }

            if (detailTrigger) {
                const messageId = detailTrigger.dataset.messageId;
                const row = document.getElementById(`message-row-${messageId}`);
                if(!row) return;

                const nama = row.querySelector('td:nth-child(1) > div:first-child').textContent;
                const email = row.querySelector('td:nth-child(1) > div:last-child').textContent;
                const deskripsi = row.querySelector('td:nth-child(2)').getAttribute('title');
                const tanggal = row.querySelector('td:nth-child(3)').textContent;

                document.getElementById('modal-nama').textContent = nama;
                document.getElementById('modal-email').textContent = email;
                document.getElementById('modal-deskripsi').textContent = deskripsi;
                document.getElementById('modal-tanggal').textContent = tanggal;

                modal.classList.remove('hidden');
                setTimeout(() => { modal.classList.remove('opacity-0'); modalContent.classList.remove('opacity-0', '-translate-y-10'); }, 10);
            }
        });

        if (loadMoreButton) {
            loadMoreButton.addEventListener('click', async () => {
                if(isFetching) return;
                isFetching = true;
                currentPage++;
                const btnText = loadMoreButton.querySelector('.btn-text');
                const spinner = loadMoreButton.querySelector('.loading-spinner');
                btnText.classList.add('hidden');
                spinner.classList.remove('hidden');
                loadMoreButton.disabled = true;
                try {
                    const response = await fetch(`/api/get-messages?page=${currentPage}`);
                    if (!response.ok) throw new Error('Gagal memuat pesan berikutnya.');
                    const newMessages = await response.json();
                    
                    if (newMessages.length > 0) {
                        document.getElementById('messages-table-body').insertAdjacentHTML('beforeend', renderRows(newMessages));
                    } else {
                        loadMoreButton.style.display = 'none';
                        showToast('Semua pesan sudah ditampilkan.');
                    }
                } catch(err) { showToast(err.message, true); currentPage--; }
                finally { isFetching = false; btnText.classList.remove('hidden'); spinner.classList.add('hidden'); loadMoreButton.disabled = false; }
            });
        }
        
        const closeModal = () => {
            modalContent.classList.add('opacity-0', '-translate-y-10');
            modal.classList.add('opacity-0');
            setTimeout(() => modal.classList.add('hidden'), 300);
        };
        if (modal && closeModalButton) {
            closeModalButton.addEventListener('click', closeModal);
            modal.addEventListener('click', (event) => { if(event.target === modal) closeModal(); });
        }
    };
    
    document.addEventListener('astro:page-load', initDashboard);
    if (document.readyState !== 'loading') initDashboard();
    else document.addEventListener('DOMContentLoaded', initDashboard);
  })();
</script>